version: '3'
services:
  traefik:
    #image: traefik:v2.10
    image: traefik/traefik:latest
    command:
      - --entrypoints.web.address=:80
      - --providers.docker
      - --api.insecure
      - --log.level=DEBUG
    ports:
      - "8085:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  api-server-1:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - NAME=api-server-1
      - MB_LIMIT=300
      - SLOW=300ms
    expose:
      - "80"
    ports:
      - "8001:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-server.rule=Host(`api-server.com`)"
      - "traefik.http.routers.api-server.service=api-server"
      - "traefik.http.routers.api-server.entryPoints=web"
      - "traefik.http.services.api-server.loadBalancer.server.url=http://api-server-1:80"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.path=/health"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.interval=5s"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.timeout=3s"
        # Un-Comment to enable the authz server middleware
        #- "traefik.http.routers.api-server.middlewares=api-server@docker"
        #- "traefik.http.middlewares.api-server.forwardAuth.address=http://authz-server:4000/auth"
        #- "traefik.http.middlewares.api-server.forwardAuth.authresponseheaders=X-Mailgun-Account-Id, X-Mailgun-Domain-Id, X-Spec-Auth-Type"
  api-server-2:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - NAME=api-server-2
      - MB_LIMIT=1400
      - SLOW=300ms
    expose:
      - "80"
    ports:
      - "8002:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-server.rule=Host(`api-server.com`)"
      - "traefik.http.routers.api-server.service=api-server"
      - "traefik.http.routers.api-server.entryPoints=web"
      - "traefik.http.services.api-server.loadBalancer.server.url=http://api-server-2:80"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.path=/health"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.interval=5s"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.timeout=3s"
  api-server-3:
    build:
      context: .
      dockerfile: Dockerfile.api
    environment:
      - NAME=api-server-3
      - MB_LIMIT=1400
      - SLOW=500ms
    expose:
      - "80"
    ports:
      - "8003:80"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api-server.rule=Host(`api-server.com`)"
      - "traefik.http.routers.api-server.service=api-server"
      - "traefik.http.routers.api-server.entryPoints=web"
      - "traefik.http.services.api-server.loadBalancer.server.url=http://api-server-3:80"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.path=/health"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.interval=5s"
      - "traefik.http.services.api-server.loadBalancer.healthCheck.timeout=3s"
  authz-server:
    build:
      context: .
      dockerfile: Dockerfile.authz
    expose:
      - "4000"
    ports:
      - "4000:4000"
        #labels:
        #- "traefik.http.routers.forward-auth.rule=Host(`authz-server.com`)"
        #- "traefik.http.routers.forward-auth.service=forward-auth-svc"
        #- "traefik.http.services.forward-auth-svc.loadbalancer.server.port=4000"
